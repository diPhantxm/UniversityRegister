// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityRegister.API;

namespace UniversityRegister.API.Migrations
{
    [DbContext(typeof(UniversityRegisterDbContext))]
    partial class UniversityRegisterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversityRegister.API.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("DisciplineId");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("DisciplineId");

                    b.Property<int>("Mark");

                    b.Property<string>("StudentId");

                    b.Property<int?>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.GroupsClasses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassId");

                    b.Property<int?>("GroupId");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupsClasses");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.GroupsDisciplines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DisciplineId");

                    b.Property<int?>("GroupId");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupsDisciplines");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<int?>("GroupId");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.TeachersDisciplines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DisciplineId");

                    b.Property<int?>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeachersDisciplines");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.Class", b =>
                {
                    b.HasOne("UniversityRegister.API.Models.Discipline", "Discipline")
                        .WithMany("StudentsClasses")
                        .HasForeignKey("DisciplineId");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.Grade", b =>
                {
                    b.HasOne("UniversityRegister.API.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId");

                    b.HasOne("UniversityRegister.API.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId");

                    b.HasOne("UniversityRegister.API.Models.Teacher", "Teacher")
                        .WithMany("Grades")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.GroupsClasses", b =>
                {
                    b.HasOne("UniversityRegister.API.Models.Class", "Class")
                        .WithMany("Groups")
                        .HasForeignKey("ClassId");

                    b.HasOne("UniversityRegister.API.Models.Group", "Group")
                        .WithMany("Classes")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.GroupsDisciplines", b =>
                {
                    b.HasOne("UniversityRegister.API.Models.Discipline", "Discipline")
                        .WithMany("GroupsDisciplines")
                        .HasForeignKey("DisciplineId");

                    b.HasOne("UniversityRegister.API.Models.Group", "Group")
                        .WithMany("Disciplines")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.Student", b =>
                {
                    b.HasOne("UniversityRegister.API.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("UniversityRegister.API.Models.TeachersDisciplines", b =>
                {
                    b.HasOne("UniversityRegister.API.Models.Discipline", "Discipline")
                        .WithMany("Teachers")
                        .HasForeignKey("DisciplineId");

                    b.HasOne("UniversityRegister.API.Models.Teacher", "Teacher")
                        .WithMany("Disciplines")
                        .HasForeignKey("TeacherId");
                });
#pragma warning restore 612, 618
        }
    }
}
